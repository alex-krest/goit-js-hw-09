{"version":3,"sources":["js/03-promises.js"],"names":["refs","formEl","document","querySelector","delayEl","stepEl","amountEl","buttonEl","startPromise","e","preventDefault","elements","delay","step","amount","currentTarget","console","log","value","i","position","createPromise","then","catch","addEventListener","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"mappings":";AACA,MAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,gBAChCE,OAAQH,SAASC,cAAc,eAC/BG,SAAUJ,SAASC,cAAc,iBACjCI,SAAUL,SAASC,cAAc,gBAanC,SAASK,EAAaC,GACpBA,EAAEC,iBAEI,MACJC,UAAU,MAAEC,EAAF,KAASC,EAAT,OAAeC,IACvBL,EAAEM,cACNC,QAAQC,IAAIL,EAAMM,OAClBF,QAAQC,IAAIJ,EAAKK,OACjBF,QAAQC,IAAIH,EAAOI,OAEd,IAAA,IAAIC,EAAI,EAAGA,EAAIL,EAAQK,GAAK,EAAG,CAC5BC,MAAAA,EAAWD,EAAI,EACjBA,EAAI,IACNP,EAAQC,EAAKK,OAEfG,EAAcD,EAAUR,GACrBU,KAAK,EAAGF,SAAAA,EAAUR,MAAAA,MACjBI,QAAQC,2BAA2BG,QAAeR,SAEnDW,MAAM,EAAGH,SAAAA,EAAUR,MAAAA,MAClBI,QAAQC,0BAA0BG,QAAeR,UAvBzDZ,EAAKC,OAAOuB,iBAAiB,SAAUhB,GA6BvC,MAAMa,EAAgB,CAACD,EAAUR,KAEzBa,MAAAA,EAAgBC,KAAKC,SAAW,GAE/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAE3BC,WAAW,KACLN,EACFI,EAAQ,CAAET,SAAAA,EAAUR,MAAAA,IAEpBkB,EAAO,CAAEV,SAAAA,EAAUR,MAAAA,KAEpBA","file":"03-promises.e9ab2fc0.js","sourceRoot":"../src","sourcesContent":["//----Ссылки на элементы\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('[name=delay]'),\n  stepEl: document.querySelector('[name=step]'),\n  amountEl: document.querySelector('[name=amount]'),\n  buttonEl: document.querySelector('form>button'),\n};\n// -Взяли значения полей формы:\n// const delay = Number(refs.formEl.elements.delay.value);\n// const step = Number(refs.formEl.elements.step.value);\n// const amount = Number(refs.formEl.elements.amount.value);\n// console.log(delay);\n// console.log(step);\n// console.log(amount);\n// ----ОТПРАВКА ФОРМЫ\nrefs.formEl.addEventListener('submit', startPromise);\n\n//   ----ФУНКЦИЯ КОЛБЕК ДЛЯ ОТПРАВКИ ФОРМЫ С ЗАПУСКОМ ЦИКЛА ВЫЗОВОВ ПРОМИСОВ\nfunction startPromise(e) {\n  e.preventDefault();\n  // --элементы формы выделяем как переменные, чтобы брать их значения\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  console.log(delay.value);\n  console.log(step.value);\n  console.log(amount.value);\n  // -Цикл генераций промисов c их обработкой\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    if (i > 1) {\n      delay = step.value;\n    }\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n// --ФУНКЦИЯ ЗАПУСКА ОДНОГО ПРОМИСА\nconst createPromise = (position, delay) => {\n  //--генератор случайного числа:\n  const shouldResolve = Math.random() > 0.3;\n  // --промис-------------------------\n  return new Promise((resolve, reject) => {\n    // --функция отложенного вызова - задержка вызова\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n"]}